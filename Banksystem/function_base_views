import serializers as serializers
from django.shortcuts import render
from django.db import IntegrityError

# Create your views here.

from rest_framework.decorators import api_view
from .models import Branch,Bank
from rest_framework.response import Response
from .serialisers import BranchSerializer , BankSerializer
from rest_framework import serializers, status
import json
from django.http import HttpResponse , JsonResponse
from rest_framework.parsers import JSONParser
from django.views.decorators.csrf import csrf_exempt


@api_view(['GET','POST','DELETE'])
def branch_info(request):
    if request.method == 'GET':
        branch = Branch.objects.all()
        serializer = BranchSerializer(branch,many=True)
        return JsonResponse(serializer.data,safe=False,status=200)

    elif request.method == 'POST':
        data = JSONParser().parse(request)
        serializer = BranchSerializer(data=data)
        if serializer.is_valid():
            serializer.save()
            return JsonResponse(serializer.data,status=201)
        return JsonResponse(serializers.errors, status=400)

    elif request.method == 'DELETE':
        count = Branch.objects.all().delete()
        return JsonResponse({'message': '{} Tutorials were deleted successfully!'.format(count[0])}, status=status.HTTP_204_NO_CONTENT)


@api_view(['PUT'])
def branch_info_put(request):
    if request.method == "PUT":
        data = JSONParser().parse(request)
        serializer = BranchSerializer(data=data)
        if serializer.is_valid():
            serializer.save()
            return JsonResponse(serializer.data)
        return JsonResponse(serializer.errors,status=status.HTTP_400_BAD_REQUEST)

@api_view(["GET","POST"])
def bank_info(request):
    if request.method == "GET":
        bank_information = Bank.objects.all()
        bank_info_serializer = BankSerializer(bank_information,many=True)
        return Response(bank_info_serializer.errors,status=status.HTTP_400_BAD_REQUEST)

    elif request.method == "POST":
        bank_serializer = BankSerializer(data=request.data)
        if bank_serializer.is_valid:
            bank_serializer.save()
            return Response(bank_serializer.data,status=status.HTTP_201_CREATED)
        else:
            return Response(bank_serializer.errors,status=status.HTTP_400_BAD_REQUEST)

    elif request.method == "DELETE":
        count1 = Bank.objects.all().delete()
        return Response({'message': '{} Tutorials were deleted successfully!'.format(count1[0])},status=status.HTTP_204_NO_CONTENT)

@api_view(["PUT"])
def bank_info_put(request):
    if request.method == "PUT":
        bank_serialiser = BankSerializer(Bank,data=request.data)
        if bank_serialiser.is_valid():
            bank_serialiser.save()
            return Response(bank_serialiser.data)
        return Response(bank_serialiser.errors,status=status.HTTP_400_BAD_REQUEST)



